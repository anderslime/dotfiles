function git-new-remote-tracking {
  git checkout -b $1 && git push -u origin $1
}

function git_branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git-done {
  branch=`git_branch_name`
  killruby ; spring stop ; git checkout master && git merge $branch --ff-only && bundle install && prepdb && bin/rspec && git push && git branch -D $branch && git push origin :$branch
}

function git-nuke {
  git branch -D $1 && git push origin :$1
}
compdef _git git-nuke=git-checkout

function git-on-master {
  branch=`git_branch_name`
  git checkout master && git pull --rebase
  git checkout $branch
  git rebase master
  }

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

function rrg {
  bin/rake routes | grep $1
}

function take {
  mkdir $1
  cd $1
}

# Allows commit message without typing quotes (can't have quotes in the commit msg though).
function gc {
  git commit -m "$*"
}

function gem_from_path {
  gem_name="$1"

  # Replace gem 'gem_name' with gem 'gem_name', path: '../gem_name'
  perl -p -i -e "s/gem ('|\")${gem_name}('|\")\$/gem '${gem_name}', path: '..\/${gem_name}'/gi" Gemfile
  rm -rf tmp/cache/assets  # Clear asset cache (for rails apps)
  bundle  # Bundle
  powder -r # Restart pow
}
alias gfp=gem_from_path

function note {
  vim ~/notes/$1.txt
}
alias en=note

function h {
  heroku $2 --remote=$1 ${@:3}
}

function remove_untracked_files {
  git clean -f -n
  read -q "REPLY?Above files will be removed. Are you sure?" -r 1 -n
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    git clean -f
  fi
}

function brew_install {
  brew install $1
  echo "brew install $1" >> ~/.dotfiles/brewinstall
}
